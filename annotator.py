import os
import openai

openai.api_key = os.environ.get("OPENAI_API_KEY")

def generate_annotation(title, text):
    prompt = f"""–ü—Ä–æ—á–∏—Ç–∞–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Å–æ—Å—Ç–∞–≤—å –∫—Ä–∞—Ç–∫—É—é –∏—Ä–æ–Ω–∏—á–Ω—É—é –∞–Ω–Ω–æ—Ç–∞—Ü–∏—é, –∑–∞—Ç–µ–º –≤—ã–¥–µ–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–∫—Ç—ã (–∫—Ç–æ, –≥–¥–µ, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ). –ù–µ —É–∫–∞–∑—ã–≤–∞–π –∏—Å—Ç–æ—á–Ω–∏–∫.

–ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}
–¢–µ–∫—Å—Ç: {text}

–û—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ:

üìù –ê–Ω–Ω–æ—Ç–∞—Ü–∏—è: ...
üìå –§–∞–∫—Ç—ã: ..."""

    try:
        response = openai.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": prompt}],
            temperature=0.7,
            max_tokens=300
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        return f"–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {e}"
